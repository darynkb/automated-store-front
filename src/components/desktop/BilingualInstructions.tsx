'use client'

import { useState } from 'react'

interface InstructionStep {
  number: number
  en: string
  kz: string
  ru: string
}

interface BilingualInstructionsProps {
  className?: string
  showLanguageToggle?: boolean
}

const instructionSteps: InstructionStep[] = [
  {
    number: 1,
    en: 'Open your mobile device camera or QR scanner app',
    kz: '–ú–æ–±–∏–ª—å–¥—ñ “õ“±—Ä—ã–ª“ì—ã“£—ã–∑–¥—ã“£ –∫–∞–º–µ—Ä–∞—Å—ã–Ω –Ω–µ–º–µ—Å–µ QR —Å–∫–∞–Ω–µ—Ä “õ–æ–ª–¥–∞–Ω–±–∞—Å—ã–Ω –∞—à—ã“£—ã–∑',
    ru: '–û—Ç–∫—Ä–æ–π—Ç–µ –∫–∞–º–µ—Ä—É –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è QR-–∫–æ–¥–æ–≤'
  },
  {
    number: 2,
    en: 'Point your camera at the QR code displayed above',
    kz: '–ö–∞–º–µ—Ä–∞“£—ã–∑–¥—ã –∂–æ“ì–∞—Ä—ã–¥–∞ –∫”©—Ä—Å–µ—Ç—ñ–ª–≥–µ–Ω QR –∫–æ–¥—ã–Ω–∞ –±–∞“ì—ã—Ç—Ç–∞“£—ã–∑',
    ru: '–ù–∞–≤–µ–¥–∏—Ç–µ –∫–∞–º–µ—Ä—É –Ω–∞ QR-–∫–æ–¥, –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–Ω—ã–π –≤—ã—à–µ'
  },
  {
    number: 3,
    en: 'Follow the instructions on your mobile device',
    kz: '–ú–æ–±–∏–ª—å–¥—ñ “õ“±—Ä—ã–ª“ì—ã“£—ã–∑–¥–∞“ì—ã –Ω“±—Å“õ–∞—É–ª–∞—Ä–¥—ã –æ—Ä—ã–Ω–¥–∞“£—ã–∑',
    ru: '–°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –Ω–∞ –≤–∞—à–µ–º –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ'
  },
  {
    number: 4,
    en: 'Wait for the compartment to open and retrieve your parcel',
    kz: '–ë”©–ª–º–µ–Ω—ñ“£ –∞—à—ã–ª—É—ã–Ω –∫“Ø—Ç—ñ–ø, –ø–æ—Å—ã–ª–∫–∞–Ω—ã –∞–ª—ã“£—ã–∑',
    ru: '–î–æ–∂–¥–∏—Ç–µ—Å—å –æ—Ç–∫—Ä—ã—Ç–∏—è –æ—Ç–¥–µ–ª–µ–Ω–∏—è –∏ –∑–∞–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –ø–æ—Å—ã–ª–∫—É'
  }
]

export function BilingualInstructions({ className = '', showLanguageToggle = false }: BilingualInstructionsProps) {
  const [language, setLanguage] = useState<'en' | 'kz' | 'ru'>('en')

  const getStepColor = (index: number) => {
    const colors = ['bg-blue-600', 'bg-green-600', 'bg-purple-600', 'bg-orange-600']
    return colors[index % colors.length]
  }

  const renderInstructions = (lang: 'en' | 'kz' | 'ru', title: string) => (
    <div className="bg-white rounded-xl shadow-md p-6">
      <h3 className="text-xl font-semibold text-gray-900 mb-4 flex items-center">
        <span className="text-2xl mr-2">üì±</span>
        {title}
      </h3>
      <div className="space-y-3">
        {instructionSteps.map((step, index) => (
          <div key={step.number} className="flex items-start space-x-3">
            <div className={`flex-shrink-0 w-6 h-6 ${getStepColor(index)} text-white rounded-full flex items-center justify-center text-sm font-bold`}>
              {step.number}
            </div>
            <p className="text-gray-700 leading-relaxed">
              {step[lang]}
            </p>
          </div>
        ))}
      </div>
    </div>
  )

  return (
    <div className={`space-y-6 ${className}`}>
      {showLanguageToggle && (
        <div className="flex justify-center">
          <div className="bg-white rounded-lg p-1 shadow-sm border">
            <button
              onClick={() => setLanguage('kz')}
              className={`px-3 py-1 rounded text-sm font-medium transition-colors ${
                language === 'kz' 
                  ? 'bg-blue-600 text-white' 
                  : 'text-gray-600 hover:text-gray-900'
              }`}
            >
              “ö–∞–∑–∞“õ—à–∞
            </button>
            
            <button
              onClick={() => setLanguage('ru')}
              className={`px-3 py-1 rounded text-sm font-medium transition-colors ${
                language === 'ru' 
                  ? 'bg-blue-600 text-white' 
                  : 'text-gray-600 hover:text-gray-900'
              }`}
            >
              –†—É—Å—Å–∫–∏–π
            </button>
            <button
              onClick={() => setLanguage('en')}
              className={`px-3 py-1 rounded text-sm font-medium transition-colors ${
                language === 'en' 
                  ? 'bg-blue-600 text-white' 
                  : 'text-gray-600 hover:text-gray-900'
              }`}
            >
              English
            </button>
          </div>
        </div>
      )}

      {language === 'en' && 
        renderInstructions('en', 'How to Pick Up Your Parcel')
      }

      {language === 'ru' && 
        renderInstructions('ru', '–ö–∞–∫ –∑–∞–±—Ä–∞—Ç—å –≤–∞—à—É –ø–æ—Å—ã–ª–∫—É')
      }

      {language === 'kz' && 
        renderInstructions('kz', '–°—ñ–∑–¥—ñ“£ –ø–æ—Å—ã–ª–∫–∞–Ω—ã “õ–∞–ª–∞–π –∞–ª—É –∫–µ—Ä–µ–∫')
      }

      {/* Additional help section
      <div className="bg-blue-50 rounded-xl p-6 border border-blue-200">
        <div className="flex items-start space-x-3">
          <div className="text-2xl">üí°</div>
          <div>
            <h4 className="font-semibold text-blue-900 mb-2">
              {language === 'kz' ? '–ö”©–º–µ–∫ –∫–µ—Ä–µ–∫ –ø–µ?' : 
               language === 'ru' ? '–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?' : 'Need Help?'}
            </h4>
            <p className="text-blue-800 text-sm">
              {language === 'kz' 
                ? '–ï–≥–µ—Ä —Å—ñ–∑–¥–µ “õ–∏—ã–Ω–¥—ã“õ—Ç–∞—Ä —Ç—É—ã–Ω–¥–∞—Å–∞, –ø–µ—Ä—Å–æ–Ω–∞–ª“ì–∞ —Ö–∞–±–∞—Ä–ª–∞—Å—ã“£—ã–∑ –Ω–µ–º–µ—Å–µ –∫”©–º–µ–∫ –±–∞—Ç—ã—Ä–º–∞—Å—ã–Ω –±–∞—Å—ã“£—ã–∑.'
                : language === 'ru'
                ? '–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø–µ—Ä—Å–æ–Ω–∞–ª—É –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–º–æ—â–∏.'
                : 'If you experience any difficulties, please contact staff or press the help button.'
              }
            </p>
          </div>
        </div>
      </div> */}
    </div>
  )
}